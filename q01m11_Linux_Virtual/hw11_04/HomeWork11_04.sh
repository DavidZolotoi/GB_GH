#!/bin/bash

# Функция удаления 
del_files() {
    # Проверяем, существует ли папка
    if [ -d "." ]; then
        echo "Удаление файлов с расширениями .bak, .tmp и .backup в папке $(pwd)."
        # Удаляем файлы с расширениями .bak, .tmp и .backup внутри папки        rm *.bak *.tmp *.backup
        rm *.bak *.tmp *.backup
    else
        echo "Папка $(pwd) не существует."
    fi
}

### КОД СКРИПТА ###

# Показ исходной файловой структуры
echo "Исходная файловая структура в текущей папке"
tree

# Создание случайной файловой системы и ее показ
targetFolder="$1"
bash generateFileStructure.sh "$targetFolder"
echo "Скорректированная файловая структура после случайной генерации"
tree

# Проверка существования папки
if [ -z "$targetFolder" ]; then
  echo "Не указан путь к папке."
  exit 1
fi

# Заходим в папку targetFolder
cd "$targetFolder" || exit 1

# Удаляем файлы
del_files

# Получаем список папок внутри targetFolder
subfolders=$(ls -d */)

# Цикл для обхода папок
for folder in $subfolders
do
  # Удаляем символ "/" из имени папки
  folder=${folder%/}

  # Переходим в папку
  cd "$folder" || continue

  # Удаляем необходимые файлы текущей папки
  del_files
 
  # Возвращаемся обратно в папку targetFolder
  cd ..
done

# Возвращаемся обратно на уровень вверх
cd ..

# Показ файловой системы после удаления необходимых файлов
echo "Скорректированная файловая структура после удаления файлов с расширениями .bak, .tmp и .backup"
tree

# Удаление всего созданного в домашке и показ файловой системы
echo "Удаление следов работы скрипта домашней работы."
rm -r "$targetFolder"

# Показ файловой системы после удаления следов работы скрипта
echo "Файловая структура в текущей папке на данный момент"
tree
